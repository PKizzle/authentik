name: "Setup authentik testing environment"
description: "Setup authentik testing environment"

inputs:
  postgresql_tag:
    description: "Optional postgresql image tag"
    default: "12"
  redis_config:
    description: "Optional redis configuration"
    default: "redis"

runs:
  using: "composite"
  steps:
    - name: Install poetry
      shell: bash
      run: |
        pipx install poetry || true
        sudo apt update
        sudo apt install -y libpq-dev openssl libxmlsec1-dev pkg-config gettext
    - name: Setup python and restore poetry
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
        cache: "poetry"
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: "20"
        cache: "npm"
        cache-dependency-path: web/package-lock.json
    - name: Setup dependencies
      shell: bash
      run: |
        case ${{ inputs.redis_config }} in
          redis-sentinel)
            echo "redis_url=redis+sentinel://localhost:26379/0?mastername=mymaster" >> $GITHUB_ENV
            ;;
          redis-cluster)
            echo "redis_url=redis+cluster://bitnami@localhost:6379,localhost:6380,localhost:6381,localhost:6382,localhost:6383,localhost:6384/0" >> $GITHUB_ENV
            ;;
          *)
            echo "redis_url=redis://bitnami@localhost:6379/0" >> $GITHUB_ENV
            ;;
        esac
        export PSQL_TAG=${{ inputs.postgresql_tag }}
        docker-compose -f .github/actions/setup/docker-compose.yml --profile ${{ inputs.redis_config }} up -d
        poetry env use python3.11
        poetry install
        cd web && npm ci
    - name: Generate config
      shell: poetry run python {0}
      run: |
        from authentik.lib.generators import generate_id
        from yaml import safe_dump

        with open("local.env.yml", "w") as _config:
            safe_dump(
                {
                    "log_level": "debug",
                    "secret_key": generate_id(),
                    "redis": {
                      "url": "${{ env.redis_url }}"
                    },
                },
                _config,
                default_flow_style=False,
            )
